@use "sass:math";

.container {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: math.div($gutter-width, 2) ;
  padding-right: math.div($gutter-width, 2);
  @include mq(sm){
    max-width: 540px;
  }
  @include mq(md){
    max-width: 720px;
  }
  @include mq(lg){
    max-width: 960px;
  }
  @include mq(xl){
    max-width: 1140px;
  }
}

.container-fluid {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: math.div($gutter-width, 2);
  padding-right: math.div($gutter-width, 2);
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -(math.div($gutter-width, 2));
  margin-right: -(math.div($gutter-width, 2));
}

@each $key, $value in $grid-breakpoints {
  @if not $value {
    @for $var from 1 through $grid-sum {
      .col-#{$var} {
        max-width: 100% * (math.div($var, $grid-sum));
        flex: 0 0 (100% * (math.div($var, $grid-sum)));
        padding-left: math.div($gutter-width, 2);
        padding-right: math.div($gutter-width, 2);
      }
    }
  } @else {
    @media screen and (min-width: $value) {
      @for $var from 1 through $grid-sum  {
        .col-#{$key}-#{$var} {
          max-width: 100% * (math.div($var, $grid-sum));
          flex: 0 0 (100% * (math.div($var, $grid-sum)));
          padding-left: math.div($gutter-width, 2);
          padding-right: math.div($gutter-width, 2);
        }
      }
    }
  }
}

// gutter widths
@each $key, $val in $gutters {
  .g-#{$key} {
    margin-left: -$val;
    margin-right: -$val;

    >[class*='col-'] {
      padding: $val;
    }
  }
  .gx-#{$key} {
    margin-left: -$val;
    margin-right: -$val;

    >[class*='col-'] {
      padding-left: $val;
      padding-right: $val;
    }
  }
  .gy-#{$key} {
    >[class*='col-'] {
      padding-top: $val;
      padding-bottom: $val;
    }
  }
}