//************目錄***************

//   一、文字設定
//       1.1 字級與行高計算
//       1.2 圖片取代文字

//   二、背景圖
//       2.1 背景圖設定
//       2.2 依照背景色，設定文字顏色

//   三、功能性
//       3.1 清除浮動
//       3.2 margin padding 
//       3.3 格線

//   四、互動
//       4.1 hover效果

//   五、定位
//       5.1 position absolute

//   六、顏色
//       6.1 color gradients




//************目錄***************

//************文字設定 START***************

//1.1字級與行高計算
$baseSize: 12px;
$sizeLevel: 4px;
$paddingLevel: 1.2;
$baseLineSize: 10px;

@function font($level: 0) {
  @if $level < 0 {
    $level: 0;
  }

  @return $baseSize + $sizeLevel * round($level);
}

@function rhythm($size) {
  @return ceil($size * $paddingLevel / $baseLineSize) * $baseLineSize;
}

@mixin font($level: 1, $line-height: auto) {
  $size: font($level); //16px 預設一級字
  $line: rhythm($size); //20px 預設一級行高

  font-size: $size;

  @if $line-height == auto or $line-height < $line {
    line-height: $line;
  }

  @else {
    line-height: $line-height;
  }

  //如果你傳進來的行高是auto，或你傳進來的比我算的小
  //請用我算的 $line
  //如果你傳進來的比我算的大，就用傳進來的 $line-height
}

//1.2 圖片取代文字
@mixin text-hide {
  white-space: nowrap;
  text-indent: 100%;
  overflow: hidden;
}

//1.3 文字溢出 ...
@mixin text-overflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//文字溢出 多行版本
@mixin text-overflow-lines {
  text-overflow: ellipsis;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2; //行數
  -webkit-box-orient: vertical;
  white-space: normal;
}

//************文字設定 END***************


//************背景圖 START***************

//2.1 背景圖設定

@mixin backgroundImg {
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}

//2.2 依照背景色，設定文字顏色
@function set-text-color($color) {
  @if(lightness($color) > 60) {
    @return #333;
  }

  @else {
    @return #fff;
  }
}

@mixin set-background($color) {
  background-color: $color;
  color: set-text-color($color);
}

//************背景圖 END ***************

//************功能性設定 START ***************

//3.1清除浮動
@mixin clearfix {
  &::after {
    display: block;
    content: "";
    clear: both;
  }
}

//3.2 margin padding
$spaceamounts: (
  1,
  2,
  3,
  4,
  5
);

@each $space in $spaceamounts {

  //All around Margin
  .m-#{$space} {
    margin: #{$space}rem;
  }

  // Vertical Margin
  .my-#{$space} {
    margin: #{$space}rem 0;
  }

  //All around Padding
  .p-#{$space} {
    padding: #{$space}rem;
  }

  // Vertical Padding
  .py-#{$space} {
    padding: #{$space}rem 0;
  }
}

// 3.3 格線
@mixin grid($cloum_number, $cloum_gutter) {
  width: ($width - $cloum_gutter*($cloum_number - 1)) / $cloum_number;
  margin-right: $cloum_gutter;

  &:nth-child(#{$cloum_number}n) {
    margin-right: 0
  }
}

// 3.4 製作偽元素
@mixin pseudo($loc: before,
  $content: '',
  $pos: absolute,
  $top: 0,
  $bottom: 0,
  $right: 0,
  $left: 0) {
  position: relative;

  &::#{$loc} {
    content: $content;
    position: $pos;
    top: $top;
    bottom: $bottom;
    right: $right;
    left: $left;
    @content;
  }
}

// 3.5 製作三角形
@mixin arrow($direction: down, $size: 5px, $color: #555) {
  width: 0;
  height: 0;

  @if ($direction ==left) {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
  }

  @else if ($direction ==right) {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  }

  @else if ($direction ==down) {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
  }

  @else if ($direction ==top) {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  }
}

//隱藏 scroll bar
@mixin hide-scrollbar() {
  &::-webkit-scrollbar {
    display: none;
  }

  -ms-overflow-style: none;
  /* IE and Edge */
  scrollbar-width: none;
  /* Firefox */
}

//************功能性設定 END ***************

//************定位 START ***************
// 5.1 position absolute
@mixin position ($pos: absolute, $top: auto, $left: auto, $bottom: auto, $right: auto) {
  position: $pos;

  @if $top !=auto {
    top: $top;
  }

  @if $left !=auto {
    left: $left;
  }

  @if $bottom !=auto {
    bottom: $bottom;
  }

  @if $right !=auto {
    right: $right;
  }
}


//***********定位 End********************

//***********顏色 START *****************

//6.1 漸層色
// $gradients 是顏色陣列
@mixin linear-gradient($direction, $gradients...) {
  background-color: nth($gradients, 1);
  background-image: linear-gradient($direction, $gradients...);
}


//***********顏色 END *******************